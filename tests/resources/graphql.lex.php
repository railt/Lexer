<?php declare(strict_types=1);
return [
    'T_AND'                 => '&',
    'T_OR'                  => '\\|',
    'T_PARENTHESIS_OPEN'    => '\\(',
    'T_PARENTHESIS_CLOSE'   => '\\)',
    'T_BRACKET_OPEN'        => '\\[',
    'T_BRACKET_CLOSE'       => '\\]',
    'T_BRACE_OPEN'          => '\\{',
    'T_BRACE_CLOSE'         => '\\}',
    'T_NON_NULL'            => '!',
    'T_THREE_DOTS'          => '\\.\\.\\.',
    'T_COLON'               => ':',
    'T_EQUAL'               => '=',
    'T_DIRECTIVE_AT'        => '@',
    'T_NUMBER'              => '\\-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][\\+\\-]?[0-9]+)?\\b',
    'T_TRUE'                => 'true\\b',
    'T_FALSE'               => 'false\\b',
    'T_NULL'                => 'null\\b',
    'T_BLOCK_STRING'        => '"""(.+?)"""',
    'T_STRING'              => '"(.+?)"',
    'T_NAMESPACE'           => 'namespace\\b',
    'T_EXTENDS'             => 'extends\\b',
    'T_IMPLEMENTS'          => 'implements\\b',
    'T_ON'                  => 'on\\b',
    'T_TYPE'                => 'type\\b',
    'T_ENUM'                => 'enum\\b',
    'T_UNION'               => 'union\\b',
    'T_INPUT_UNION'         => 'inputUnion\\b',
    'T_INTERFACE'           => 'interface\\b',
    'T_SCHEMA'              => 'schema\\b',
    'T_SCALAR'              => 'scalar\\b',
    'T_DIRECTIVE'           => 'directive\\b',
    'T_INPUT'               => 'input\\b',
    'T_EXTEND'              => 'extend\\b',
    'T_FRAGMENT'            => 'fragment\\b',
    'T_VARIABLE'            => '\\$[_A-Za-z][_0-9A-Za-z]*',
    'T_NAME'                => '[_A-Za-z][_0-9A-Za-z]*',
    'T_WHITESPACE'          => '(\\xfe\\xff|\\x20|\\x09|\\x0a|\\x0d)+',
    'T_COMMENT'             => '#[^\\n]*',
    'T_COMMA'               => ',',
];
